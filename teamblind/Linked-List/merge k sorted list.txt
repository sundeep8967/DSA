 typedef pair<int,int> pi;
    
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        
        if(lists.size()==0 ) return NULL;
        
        
        priority_queue<pi,vector<pi> , greater<pi> > pq;
        
        ListNode *head = NULL ;
        ListNode* next = NULL ;
        
        for(int i=0;i<lists.size() ; i++) if(lists[i])pq.push({lists[i]->val, i});
        
        int i;
        while( pq.size()>0 ){
            
            
            
            if(head==NULL){
                
                head=lists[pq.top().second];
                next=head;
                
            }else{
                
                
                next->next=lists[pq.top().second];
                next=next->next;
                
                
                
            }
            
            i=pq.top().second;
            
            pq.pop();
            
            lists[i]=lists[i]->next;
            
            if(lists[i]!=NULL) pq.push({lists[i]->val , i });
            
            
            
            
            
            
        }
        
        
        
        return head;
        
        
        
        
    }