class Solution {
public:
    int lengthOfLIS(vector<int>& arr) {
        
        
        
        
//         int n=arr.size();
//         if(n==1) return 1;
//         int ans=INT_MIN;
        
//         vector<int> dp(n,1);
//         for(int i=1;i<n;i++){
//             int cnt=0;
//             for(int j=i-1 ;j>=0;j--){
//                 if(arr[j]<arr[i]){
//                     dp[i]=max(dp[j]+1,dp[i]);
//                 }
//             }
           
//             ans=max(ans,dp[i]);
            
//         }
        
        vector<int> vec;
        int n=arr.size();
        vec.push_back(arr[0]);
        for(int i=1;i<n;i++){
            
            
            if(vec.back()<arr[i]){
                vec.emplace_back(arr[i]);
            }else{
                
                int pos=lower_bound(vec.begin(),vec.end(), arr[i])-vec.begin();
                cout<<pos<<" "<<arr[i]<<endl;
                vec[pos]=arr[i];
                
            }
            
        }
        
        
        
        return vec.size();
        
    }
};