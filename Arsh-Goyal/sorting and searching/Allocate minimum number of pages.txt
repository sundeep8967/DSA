class Solution 
{
    public:
    //Function to find minimum number of pages.
    
    bool ispossible(int arr[] ,int n , int barrier , int k ){
        
        int allocatedstu=1;
        int pages=0;
        
        
        for(int i=0;i<n;i++){
            
            if(arr[i]>barrier) return false;
            
            if(pages+arr[i]>barrier){
                pages=arr[i];
                allocatedstu++;
            }
            else{
                pages+=arr[i];
            }
            
            
        }
        
        
        if(allocatedstu>k) return  false ;
        
        return true;
        
        
        
        
    }
    
    
    
    int findPages(int arr[], int N, int M) 
    {
        
        
        if(N<M ) return -1;
        
        int low=arr[0];
        int high=0;
        
        for(int i=0;i<N;i++){
            
            high+=arr[i];
            low=min(low,arr[i]);
            
        }
        int mid;
        int res=-1;
        while(low<=high){
            
            mid=(high+low)>>1;
            
            if(ispossible( arr ,N , mid , M )){
                high=mid-1;
                res=mid;
            }
            else {
                
                low=mid+1;
            }
            
            
        }
        
        return res;
        
        
    }
};