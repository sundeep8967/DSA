/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Codec {
public:

    // Encodes a tree to a single string.
    string serialize(TreeNode* root) {
        
          string str="";
        if(!root) return str;
        
        queue<TreeNode*> q;
        
        q.push(root);
        
        
        
        while(!q.empty())
        {  
           TreeNode *p=q.front();
            q.pop();
            

              
          
         if(p==NULL) str.append("#,");
         else str.append(to_string(p->val)+",");
           
            
        if(p!=NULL){
                q.push(p->left);
                q.push(p->right);
            }
            
   }
        return str;
    }
        
        
        
        


    // Decodes your encoded data to tree.
    TreeNode* deserialize(string data) {
        
        if(data.size()==0) return NULL;
        
        stringstream s(data);
        string str;
        getline(s , str , ',');
        
        TreeNode* root = new TreeNode(stoi(str));
        
        queue<TreeNode*> q;
        
        q.push(root);
        
        while(!q.empty()){
            
            TreeNode* p=q.front();
            
            q.pop();
            
            getline(s,str,',');
            
            if(str=="#") p->left=NULL;
            else{
                
                TreeNode* temp=new TreeNode(stoi( str ));
                
                p->left=temp;
                q.push(temp);
                
            }
            
              getline(s,str,',');
            
            if(str=="#") p->right=NULL;
            else{
                
                TreeNode* temp1=new TreeNode(stoi( str ));
                
                p->right=temp1;
                q.push(temp1);
                
            }
            
            
            
            
            
            
        }
        
        
        return root;
        
    
        
    }
};

// Your Codec object will be instantiated and called as such:
// Codec ser, deser;
// TreeNode* ans = deser.deserialize(ser.serialize(root));