/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
     vector<vector<int>> ans;
        if(!root) return ans;
        
        
        queue<TreeNode*> q;
        
        int flag=1;
        q.push(root);
        
       
        
        
        
        while(!q.empty()){
            
            
            
            int n =q.size();
            vector<int> v;
            for(int i=0;i<n;i++){
 
                
                TreeNode* curr = q.front();
                
                v.push_back(curr->val);
                      
                q.pop();
                
                if(curr->left) q.push(curr->left);  
                
                if(curr->right)q.push(curr->right);
 
            }
            
            if(flag==1){
                 ans.push_back(v);
            }
            else{
                reverse(v.begin(),v.end());
                 ans.push_back(v);
            }
            
            
           flag=flag==1?2:1;
            
            
           
            
        }
        return ans;
        
        
        
        
        
    }
    
};