class Solution {
public:
    
    
//     void solver(TreeNode* root1 , TreeNode* root2){
        
        
//         if(root1==NULL && root2==NULL ) return ;
//         if(root1==NULL && root2!=NULL){
//             root1->val=root2->val;
//             return;
//             }
//         else if(root2==NULL){
//           return ;
//             }
//         else{
//         root1->val = root1->val+root2->val;
//         solver(root1->left,root2->left );
//         solver(root2->right,root2->right);
//         }
        
        
        
        
//     }
    
    
    
    
    TreeNode* mergeTrees(TreeNode* root1, TreeNode* root2) {
        

    
        if(root2==NULL){
            return root1;
        }
        
        if(root1==NULL){
            return root2;
        }
        
       
        
        root1->val+=root2->val;
        
        root1->left=mergeTrees(root1->left, root2->left);
        root1->right=mergeTrees(root1->right,root2->right);
        
        return root1;
        
        
        
        
    }
};