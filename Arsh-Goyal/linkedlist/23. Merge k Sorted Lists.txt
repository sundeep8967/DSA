class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        
        
        priority_queue< pair<int,int> , vector<pair<int,int>> , greater<pair<int,int> >> pq;
        
        int si=lists.size();
        
        for(int i=0;i<si;i++) if(lists[i])pq.push({lists[i]->val , i});
        
        ListNode *head=NULL ,*next=NULL;
        
        int i;
        
        while(!pq.empty()){
            
            
            if(head==NULL){
                
                head=lists[pq.top().second];
                next=head;
                    
            }
            else{
                
                
                next->next=lists[pq.top().second];
                next=next->next;
                
                
            }
            
            i=pq.top().second;
            
            pq.pop();
            
            lists[i]=lists[i]->next;
            
            if(lists[i])pq.push({lists[i]->val , i});
            
            
            
            
            
            
        }
        
        
        return head;
        
        
        
    }
};