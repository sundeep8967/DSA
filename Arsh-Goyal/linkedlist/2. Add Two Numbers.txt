/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    
    
    
    
    
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
    
        int val=0,carry=0;
        
       ListNode *head=new ListNode();
        
        ListNode* current=head;
        
        while(l1!=NULL || l2!=NULL){
            
            
            
            if(l1==NULL){  val=l2->val+carry;  }
            else if(l2==NULL){val=l1->val+carry;}
            else{val=l1->val+l2->val+carry;}
            
            
            carry=val/10;
            
            if(val>9) val-=10;
            
            
            current->next=new ListNode(val);
            current=current->next;
            
            
            if(l1!=NULL) l1=l1->next;
            if(l2!=NULL) l2=l2->next;
            
            
            
        }
        
        if(carry>0){
            
            current->next=new ListNode(carry);
        }
        
        return head->next;
        
        
        
        
        
                
        
    }
};