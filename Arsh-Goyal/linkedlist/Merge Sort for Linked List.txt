class Solution{
  public:
    //Function to sort the given linked list using Merge Sort.
    
    
    
    
    Node *merge(Node *head1 ,Node *head2){
        
        if(head1==NULL) return head2;
        
        if(head2==NULL) return head1;
        
        Node *ans=NULL;
        
        if(head1->data <=head2->data){
            ans=head1;
            ans->next=merge(head1->next , head2);
        }
        else{
            ans=head2;
            ans->next=merge(head1  ,head2->next);
        }
        
        return ans;
        
        
    }
    
    
    
    
    
    
    Node* mergeSort(Node* head) {
        // your code here
        
        
      
        
        if(head == NULL || head->next == NULL){
            return head;
            
        }
        
          Node *slow=head , *fast=head, *temp=NULL;
          
          while(fast!=NULL && fast->next!=NULL){
              
              temp=slow;
              slow=slow->next;
              fast=fast->next->next;
              
              
          }
          
          temp->next=NULL;
          Node *left=mergeSort(head);
           Node *mid=mergeSort(slow);
           Node *res=merge(left ,mid);
           return res;
    }
};