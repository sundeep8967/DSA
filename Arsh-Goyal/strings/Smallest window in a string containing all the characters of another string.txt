// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;


 // } Driver Code Ends
class Solution
{
    public:
    //Function to find the smallest window in the string s consisting
    //of all the characters of string p.
    string smallestWindow (string s, string p)
    {
        // Your code here
        
        int n=s.size();
        int m=p.size();
        
        
        unordered_map<char,int> mp;
        int count=0;
        
        for(int i=0;i<m;i++){
            if(mp[p[i]]==0){
                count++;
            }
            mp[p[i]]++;
            
        }
        
        int j=0,i=0;
        //int count=0;
        int len=n;
        int start=0;
        while(j<n){
            
           if(mp.find(s[j])!=mp.end()){
               
               mp[s[j]]--;
               if(mp[s[j]]==0){
                   count--;
               }
               
               
           }
           
           
           while(count==0){
               if(len>j-i+1){
                   len=j-i+1;
                   start=i;
               }
               if(mp.find(s[i])!=mp.end()){
                   mp[s[i]]++;
                   if(mp[s[i]]==1){
                       count++;
                   }
               }
               i++;
           }
            
            
            j++;
            
        }
        
        
        return len==s.size()?"-1":s.substr(start,len);
        
        
        
    }
};

// { Driver Code Starts.
int main()
 {
    int t;
    cin>>t;
    while(t--)
    {
        string s;
        cin>>s;
        string pat;
        cin>>pat;
        Solution obj;
        cout<<obj.smallestWindow(s, pat)<<endl;
        
    }
	return 0;
}  // } Driver Code Ends