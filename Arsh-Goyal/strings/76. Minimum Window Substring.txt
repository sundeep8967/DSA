class Solution {
public:
    string minWindow(string s, string t) {
        
        
        unordered_map<char , int> mp;
        int count=0;
        int m=t.size();
          int n=s.size();
        if(m>n) return "";
        cout<<"hi"<<endl;
        for(int i=0;i<m;i++){
        
            if(mp[t[i]]==0) count++;
             mp[t[i]]++;
        }
      
        int i=0;
        int j=0;
        int len=INT_MAX;
        int start=-1;
        while(j<n){
            
            
            if( mp.find(s[j])!=mp.end()  ){
                
                mp[s[j]]--;
                if(mp[s[j]]==0)count--;
                
            }
            
            
            while(count==0){
                
                if(len>j-i+1){
                    len=j-i+1;
                    start=i;
                }
                
                if( mp.find(s[i])!=mp.end() ){
                    
                    mp[s[i]]++;
                    if(mp[s[i]]==1)count++;
                    
                }
     
                i++;              
            }
                j++;
        }//big while
        
        
 
        
      return  s.substr(start , len);
        
        
        
        
        
    }
};