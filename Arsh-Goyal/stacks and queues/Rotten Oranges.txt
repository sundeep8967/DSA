class Solution 
{
    public:
    //Function to find minimum time required to rot all oranges. 
    int orangesRotting(vector<vector<int>>& grid) {
        // Code here
        
        queue<pair<int,int>> q;
        vector<pair<int,int>> dir={ {-1,0} , {0,-1} , {1,0} , {0,1} } ;
        int n=grid.size();
        int m=grid[0].size();
        
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==2){
                q.push({i,j});
                }
            }
        }
        
        int c=-1;
        
        while(!q.empty()){
            
            int qsize=q.size();
            
            while(qsize--){
                
                pair<int,int> p=q.front();
                
                q.pop();
                for(auto k:dir){
                int i=p.first+k.first;
                int j=p.second+k.second;
                
                if(i>=0 && i<n && j>=0 && j<m && grid[i][j]==1 ){
                    grid[i][j]=2;
                    q.push({i,j});
                }//if
                
                }//for
                
                
            }//while
            
            
            c+=1;
            
            
        }
        
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==1){
                    return -1;
                }
            }
        }
        
        return c++;;
        
        
        
        
        
    }