class Solution {
public:
    
    
    
void dfser(vector<vector<int>> &image,vector<vector<bool>> &vis, int r , int c , int newcolor , int first_val ){
        
        if( r<0|| c<0  || r>=image.size() ||  c>image[0].size() ||vis[r][c]|| image[r][c]!=first_val  ) return ;
        
    image[r][c]=newcolor;
    vis[r][c]=true;
    
    
    dfser(image, vis  , r+1, c , newcolor , first_val );
    dfser(image, vis  , r-1, c , newcolor , first_val );        
    dfser(image, vis  , r, c+1 , newcolor , first_val );        
    dfser(image, vis  , r, c-1 , newcolor , first_val );
    
    
         
        
        
        
        
        
    }
    
    
    
    
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int newColor) {
        
        int n=image.size();
        int m=image[0].size();
        
    
        vector<vector<bool>> vis(n , vector<bool>(m,false ));
        
        dfser(image, vis  , sr, sc , newColor , image[sr][sc] );
            
            return image;
        
        
    }
};