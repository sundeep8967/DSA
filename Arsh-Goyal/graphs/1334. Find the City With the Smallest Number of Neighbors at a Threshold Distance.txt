class Solution {
public:
    int findTheCity(int n, vector<vector<int>>& edges, int distanceThreshold) {
        
        vector<vector<int>> graph(n , vector<int>(n,10001));
        
        for(int i=0;i<n;i++){
          graph[i][i]=0;
        }
        
        for( auto edge : edges){
            
            graph[edge[0]][edge[1]]=edge[2];
            graph[edge[1]][edge[0]]=edge[2];
            
        }
        
        
        
        for(int k=0;k<n;k++){
            for(int i=0;i<n;i++){
                for(int j=0;j<n;j++){
                    graph[i][j]=min(graph[i][j],graph[i][k]+graph[k][j]);
                }
            }
        }
        int finc=INT_MAX;
        int p;
        
       for(int i=0;i<n;i++){
        int count=0;
                for(int j=0;j<n;j++){
                   if(graph[i][j]<=distanceThreshold){
                    count++;
                       
                   }
                }
           if(count<=finc){
               finc=count;
              p=i; 
           }

            }
        
        
        
        return p;
        
        
    }
};