class Solution {
public:
    int ladderLength(string beginWord, string endWord, vector<string>& wordList) {
     
        int n=wordList.size();
        
        queue<string> q;
        
        q.push(beginWord);
        
        int ans=0;
         
        int k=wordList[0].size();
        vector<int> vis(n,0);
        
        int r=0;
        
        while(!q.empty()){
            int size=q.size();
            
            while(size--){
                
                
            string comp=q.front();q.pop();
            
                if(comp==endWord){
                    
                    return ++ans;
                }
                
            for(int i=0;i<n;i++){
                
                if(vis[i]) continue;
                
                int count=0;
                
                for(int b=0;b<k;b++){
                    if(comp[b]!=wordList[i][b])count++;
                    
                }
                
                if(count>1 ||count==0){
                    continue;
                }
                
                else{
                    q.push(wordList[i]);
                    vis[i]=1;
                }
                
            
            }
        }
            
            ans++;
            
        }
        
            return 0;
            
        
        
    }
};